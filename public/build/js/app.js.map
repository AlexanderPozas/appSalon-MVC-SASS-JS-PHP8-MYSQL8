{"version":3,"sources":["app.js"],"names":["paso","pasoInicial","pasoFinal","cita","nombre","fecha","hora","usuarioId","servicios","iniciarApp","mostrarSeccion","tabs","botonesPaginador","paginaAnterior","paginaSiguiente","consultarAPI","nombreCliente","idCliente","seleccionarFecha","seleccionarHora","mostrarResumen","seccionAnterior","document","querySelector","classList","remove","add","tabAnterior","querySelectorAll","forEach","boton","addEventListener","e","parseInt","target","dataset","anterior","siguiente","async","url","resultado","fetch","mostrarServicios","json","error","console","log","servicio","id","precio","nombreServicio","createElement","textContent","precioServicio","divServicio","idServicio","onclick","seleccionarServicio","appendChild","some","agregado","filter","inputNombre","value","inputId","dia","Date","getUTCDay","includes","mostrarAlerta","horaCita","split","mensaje","tipo","elemento","desaparece","alertaPrevia","alerta","setTimeout","resumen","firstChild","removeChild","Object","values","length","headingServicios","textoServicio","innerHTML","headingCita","fechaFormateada","formatearFecha","fechaCita","botonReservar","reservarCita","map","datos","FormData","append","respuesta","method","body","swal","icon","title","text","button","then","window","location","reload","fechaObj","getDate","mes","getMonth","year","getFullYear","UTC","toLocaleDateString","weekday","month","day"],"mappings":"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","file":"app.js","sourcesContent":["/**Paso\r\n * Variable de los tabs de navegacion\r\n */\r\nlet paso = 1;\r\nconst pasoInicial = 1;\r\nconst pasoFinal = 3;\r\n\r\n/**Objeto referente a una cita  contiene los datos*/\r\nconst cita = {\r\n    nombre: '',\r\n    fecha: '',\r\n    hora: '',\r\n    usuarioId: '',\r\n    servicios: []\r\n}\r\n\r\n/**Esperamos a que cargue el DOM */\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    iniciarApp(); //Iniciamos nuestra app (Solo se ejecuta una vez cada método)\r\n})\r\n\r\nfunction iniciarApp() {\r\n    //Llama a la funcion mostrarSeccion\r\n    mostrarSeccion();\r\n    //Cambia la seccion cuando se presionen los tabs\r\n    tabs();\r\n    //Mostrar los botones del paginador\r\n    botonesPaginador();\r\n    paginaAnterior();\r\n    paginaSiguiente();\r\n\r\n    //Consultar api de servicios\r\n    consultarAPI();\r\n    /**Nombre del cliente desde un input */\r\n    nombreCliente();\r\n    idCliente();\r\n    /**Seleccionar fecha de cita */\r\n    seleccionarFecha();\r\n    /**Seleccionar la hora de la cita */\r\n    seleccionarHora();\r\n\r\n    /**Mostrar Resumen */\r\n    mostrarResumen();\r\n}\r\n\r\n/**funciones\r\n * 1. Agregar la clase .mostrar(display:block) o removerla de las secciones (default ocultas)\r\n * 2. Agregar la clase .actual o removerla de los botones de navegación\r\n */\r\nfunction mostrarSeccion() {\r\n    /**Secciones */\r\n    /**Ocultar la seccion si está activa */\r\n    const seccionAnterior = document.querySelector('.mostrar');\r\n    if (seccionAnterior) {\r\n        seccionAnterior.classList.remove('mostrar');\r\n    }\r\n    /**Seleccionar Seccion con el paso */\r\n    const seccion = document.querySelector(`#paso-${paso}`);\r\n    seccion.classList.add('mostrar');\r\n\r\n    /**Botones Navegación */\r\n    /**Remover la clase .actual a  los botones*/\r\n    const tabAnterior = document.querySelector('.actual');\r\n    if (tabAnterior) {\r\n        tabAnterior.classList.remove('actual');\r\n    }\r\n    /**Agregar clase .actual a los botones de las secciones */\r\n    const tab = document.querySelector(`[data-paso=\"${paso}\"]`);\r\n    tab.classList.add('actual');\r\n}\r\n\r\n/**Funcionalidad de la nevgacion (tabs) */\r\nfunction tabs() {\r\n    /**Selecciono todos los botones contenidos en el div con la clase .tabs */\r\n    const tabs = document.querySelectorAll('.tabs button');\r\n\r\n    /**Por cada elemento boton, se agrega un evento de click para ver el dataset personalizado [data-paso] */\r\n    tabs.forEach(boton => {\r\n        boton.addEventListener('click', (e) => {\r\n            paso = parseInt(e.target.dataset.paso); //Se convierte a int\r\n            mostrarSeccion(); //Muestra la seccion\r\n            botonesPaginador(); //Muestra la paginacion\r\n        }\r\n        );\r\n    });\r\n}\r\n\r\n/**Determina como se muestran los botones del paginador en cada paso \r\n*/\r\nfunction botonesPaginador() {\r\n    const anterior = document.querySelector('#anterior');\r\n    const siguiente = document.querySelector('#siguiente');\r\n\r\n    if (paso === 1) {\r\n        anterior.classList.add('ocultar');\r\n        siguiente.classList.remove('ocultar');\r\n    } else if (paso === 3) {\r\n        anterior.classList.remove('ocultar');\r\n        siguiente.classList.add('ocultar');\r\n        mostrarResumen();\r\n    } else {\r\n        anterior.classList.remove('ocultar');\r\n        siguiente.classList.remove('ocultar');\r\n    }\r\n    mostrarSeccion(); //Muestra la seccion correspondiente al paso\r\n}\r\n\r\n/**Funcionalidad de la paginacion */\r\nfunction paginaAnterior() {\r\n    const paginaAnterior = document.querySelector('#anterior');\r\n    paginaAnterior.addEventListener('click', () => {\r\n        if (paso <= pasoInicial) return;\r\n        paso--;\r\n        botonesPaginador();\r\n    });\r\n}\r\n\r\nfunction paginaSiguiente() {\r\n    const paginaSiguiente = document.querySelector('#siguiente');\r\n    paginaSiguiente.addEventListener('click', () => {\r\n        if (paso >= pasoFinal) return;\r\n        paso++;\r\n        botonesPaginador();\r\n    });\r\n}\r\n\r\n/**Funciones para la sección de Servicios */\r\n/**Funcion para consultar una API de forma asincrona */\r\nasync function consultarAPI() {\r\n    try {\r\n        //Url generada con PHP\r\n        const url = 'http://127.0.0.1:3000/api/servicios';\r\n\r\n        /**Se usa await para esperar hasta que se cumpla la solicitud */\r\n        const resultado = await fetch(url);\r\n        const servicios = await resultado.json(); //Convierte la solicitud .json a un objeto nativo de JS\r\n\r\n        /**Funcion para mostrar servicios */\r\n        mostrarServicios(servicios);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nfunction mostrarServicios(servicios) {\r\n\r\n    servicios.forEach(servicio => {\r\n        const { id, nombre, precio } = servicio; //Destructuring objeto\r\n\r\n        //Usando Scripting JS\r\n        const nombreServicio = document.createElement('P');\r\n        nombreServicio.classList.add('nombre-servicio');\r\n        nombreServicio.textContent = nombre;\r\n\r\n        const precioServicio = document.createElement('P');\r\n        precioServicio.classList.add('precio-servicio');\r\n        precioServicio.textContent = `$${precio}`;\r\n\r\n        const divServicio = document.createElement('DIV');\r\n        divServicio.classList.add('servicio');\r\n        divServicio.dataset.idServicio = id; //crea un atributo personalizado data-id-servicio = id\r\n\r\n        /**Agregar un servicio al objeto cita con un callback */\r\n        divServicio.onclick = function () {\r\n            seleccionarServicio(servicio);\r\n        }\r\n\r\n        //Agrupar los parrafos en del div\r\n        divServicio.appendChild(nombreServicio);\r\n        divServicio.appendChild(precioServicio);\r\n\r\n        //Agregarlos a la vista\r\n        const listadoServicios = document.querySelector('#servicios');\r\n        listadoServicios.appendChild(divServicio);\r\n    })\r\n}\r\n\r\nfunction seleccionarServicio(servicio) {\r\n    const { id } = servicio; //Id del objeto de hacer fetch\r\n    const { servicios } = cita; //Array del objeto cita (cita.servicios[])\r\n\r\n    //Seleccionar div con id especifico\r\n    const divServicio = document.querySelector(`[data-id-servicio=\"${id}\"]`);\r\n\r\n    /**Comprobar si un elemento esta en el array servicios de cita\r\n     * .some regresa true or false si el elemento existe en el arreglo\r\n     */\r\n    if (servicios.some(agregado => agregado.id === id)) {\r\n        //Filtrar elementos que cumplan una condición\r\n        /**.filter() filtra elemntos que no tienen el id especificado y crea un nuevo array */\r\n        cita.servicios = servicios.filter(agregado => agregado.id !== id);\r\n        divServicio.classList.remove('seleccionado');\r\n    } else {\r\n        //Agregar Elemento\r\n        /**Se agrega el objeto seleccionado al arreglo de citas.servicios*/\r\n        cita.servicios = [...servicios, servicio];\r\n        divServicio.classList.add('seleccionado');\r\n    }\r\n}\r\n\r\n/**Funciones para la seccion de citas */\r\nfunction nombreCliente() {\r\n    /**Podemos acceder a los atributos de un elemento como si fuera un objeto en js */\r\n    const inputNombre = document.querySelector('#nombre').value;\r\n    cita.nombre = inputNombre;\r\n}\r\n\r\nfunction idCliente() {\r\n    const inputId = document.querySelector('#id').value;\r\n    cita.usuarioId = inputId;\r\n}\r\n\r\nfunction seleccionarFecha() {\r\n    const inputFecha = document.querySelector('#fecha'); //Selecciono el input fecha de la vista\r\n    /**Agrego un evento de tipo input: Detecta un keyboard input */\r\n    inputFecha.addEventListener('input', e => {\r\n        const dia = new Date(e.target.value).getUTCDay(); //Obtiene el día especifico (0-6 / Domingo - Sabado)\r\n        if ([6, 0].includes(dia)) {\r\n            /**Si la fecha es en dias no permitidos Sab-Dom */\r\n            cita.fecha = '';\r\n            mostrarAlerta('Fines de Semana no Disponibles', 'error', '.formulario');\r\n\r\n        } else {\r\n            /**Si la fecha es en dias permitidos */\r\n            cita.fecha = e.target.value;\r\n        }\r\n    });\r\n}\r\n\r\nfunction seleccionarHora() {\r\n    /**Seleccionamos el input time */\r\n    const inputHora = document.querySelector('#hora');\r\n\r\n    /**Ante el evento de entrada de datos */\r\n    inputHora.addEventListener('input', e => {\r\n        const horaCita = e.target.value; //Valor de la hora hh:mm\r\n        const hora = parseInt(horaCita.split(':')[0]); //Nos centramos en las hora y lo convertimos a int\r\n\r\n        /**Verificamos horarios no permitidos */\r\n        if (hora < 9 || hora > 20) {\r\n            cita.hora = '';\r\n            mostrarAlerta('Abierto entre las 09:00 hrs y las 19:00 hrs', 'error', '.formulario');\r\n        } else {\r\n            cita.hora = e.target.value;\r\n        }\r\n\r\n    });\r\n}\r\n\r\nfunction mostrarAlerta(mensaje, tipo, elemento, desaparece = true) {\r\n    //Para evitar que no se repitan las alertas\r\n    const alertaPrevia = document.querySelector('.alerta');\r\n    if (alertaPrevia) {\r\n        //Remover Alerta previa para que deje imprimir las demas\r\n        alertaPrevia.remove();\r\n    }\r\n\r\n    //Scripting para crear un elemento de alerta\r\n    const alerta = document.createElement('P');\r\n    alerta.textContent = mensaje;\r\n    alerta.classList.add('alerta');\r\n    alerta.classList.add(tipo);\r\n\r\n    //Seleccionar donde se verá la alerta\r\n    const referencia = document.querySelector(elemento);\r\n    referencia.appendChild(alerta);\r\n\r\n    if (desaparece) {\r\n        //Esperar un tiempo (ex 3s) y remover el elemento creado\r\n        setTimeout(() => {\r\n            alerta.remove();\r\n        }, 3000);\r\n    }\r\n\r\n}\r\n\r\n/**Funciones para la seccion de Resumen */\r\nfunction mostrarResumen() {\r\n    const resumen = document.querySelector('.contenido-resumen');\r\n\r\n    /**Limpiar los firstChild de un elemento de forma ciclica */\r\n\r\n    while (resumen.firstChild) {\r\n        resumen.removeChild(resumen.firstChild);\r\n    }\r\n\r\n    /**Verificar que el objeto cita tenga los datos completos y el array no este vacío */\r\n    // console.log(Object.values(cita).includes(''));\r\n    if (Object.values(cita).includes('') || cita.servicios.length === 0) {\r\n        mostrarAlerta('Faltan Datos de Servicio, Fecha u Hora', 'error', '.contenido-resumen', false);\r\n        return;\r\n    }\r\n\r\n    /**Si cita tiene todos los datos */\r\n    //Scripting para mostrar los datos del cliente y sus servicios\r\n    const { nombre, hora, fecha, servicios } = cita; //Destructuring objeto cita\r\n\r\n    const headingServicios = document.createElement('H3');\r\n    headingServicios.textContent = 'Resumen de Servicios';\r\n    resumen.appendChild(headingServicios);\r\n\r\n    servicios.forEach(servicio => {\r\n        const { id, nombre, precio } = servicio; //Destructuring arrey servicio\r\n\r\n        const divServicio = document.createElement('DIV');\r\n        divServicio.classList.add('contenedor-servicio');\r\n\r\n        const textoServicio = document.createElement('P');\r\n        textoServicio.textContent = nombre;\r\n\r\n        const precioServicio = document.createElement('P');\r\n        precioServicio.innerHTML = `<span>Precio:</span> $${precio}`;\r\n\r\n        divServicio.appendChild(textoServicio);\r\n        divServicio.appendChild(precioServicio);\r\n\r\n        resumen.appendChild(divServicio);\r\n\r\n    })\r\n\r\n    const headingCita = document.createElement('H3');\r\n    headingCita.textContent = 'Resumen de Cita';\r\n    resumen.appendChild(headingCita);\r\n\r\n    //Formato de fecha más adecuado\r\n    fechaFormateada = formatearFecha(fecha);\r\n\r\n    const nombreCliente = document.createElement('P');\r\n    nombreCliente.innerHTML = `<span>Nombre:</span> ${nombre}`;\r\n\r\n    const fechaCita = document.createElement('P');\r\n    fechaCita.innerHTML = `<span>Fecha: </span> ${fechaFormateada}`;\r\n\r\n    const horaCita = document.createElement('P');\r\n    horaCita.innerHTML = `<span>Hora:</span> ${hora} horas`;\r\n\r\n    /**Boton para reservar cita */\r\n    const botonReservar = document.createElement('BUTTON');\r\n    botonReservar.classList.add('boton');\r\n    botonReservar.textContent = 'Reservar Cita';\r\n\r\n    /**Enviar peticiones */\r\n    botonReservar.onclick = reservarCita;\r\n\r\n    resumen.appendChild(nombreCliente);\r\n    resumen.appendChild(fechaCita);\r\n    resumen.appendChild(horaCita);\r\n    resumen.appendChild(botonReservar);\r\n}\r\n\r\nasync function reservarCita() {\r\n    /**Forma de enviar datos con javascript */\r\n    /**Datos de mi vista */\r\n    const { nombre, fecha, hora, usuarioId, servicios } = cita;\r\n\r\n    /**Crea un nuevo array con los valores especificados */\r\n    const idServicio = servicios.map(servicio => servicio.id);\r\n\r\n    /**Se pasan los datos */\r\n    const datos = new FormData();\r\n    datos.append('fecha', fecha);\r\n    datos.append('hora', hora);\r\n    datos.append('usuarioId', usuarioId);\r\n    datos.append('servicios', idServicio);\r\n\r\n    /**Conectar con una API PHP */\r\n    const url = 'http://127.0.0.1:3000/api/citas';\r\n\r\n\r\n    try {\r\n        /**Obtener una respuesta de tipo post puede ser:\r\n        * Desde mi API\r\n        * Enviar hacia mi API\r\n        */\r\n        const respuesta = await fetch(url, {\r\n            method: 'POST',\r\n            body: datos //Referencia hacia el FormData\r\n        });\r\n\r\n        //Convertir json a un objeto de JS\r\n        const resultado = await respuesta.json();\r\n        console.log(resultado);\r\n        if (resultado) {\r\n            /**Utilizando la libreria para mostrar mensajes\r\n             * Swal, SweetAlert \r\n            */\r\n            swal({\r\n                icon: \"success\",\r\n                title: \"Cita Creada\",\r\n                text: \"La Cita fue Creada Correctamente\",\r\n                button: \"Ok\"\r\n            })\r\n            .then(() => {\r\n                setTimeout(() => {\r\n                    window.location.reload(); //Recargar la página\r\n\r\n                }, 1000);\r\n            })\r\n        }\r\n    } catch (error) {\r\n        /**Utilizando la libreria para mostrar mensajes*/\r\n        swal({\r\n            icon: \"error\",\r\n            title: \"Error\",\r\n            text: \"Hubo un Error al Crear la Cita\",\r\n            button: \"Ok\"\r\n        });\r\n    }\r\n\r\n}\r\n\r\nfunction formatearFecha(fecha) {\r\n    //Crear un objeto de fecha\r\n    const fechaObj = new Date(fecha);\r\n    //Separar dia, mes y año\r\n    const dia = fechaObj.getDate() + 2;\r\n    const mes = fechaObj.getMonth();\r\n    const year = fechaObj.getFullYear();\r\n\r\n    const fechaUTC = new Date(Date.UTC(year, mes, dia));\r\n\r\n    const opciones = {\r\n        weekday: 'long',\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: 'numeric'\r\n    };\r\n\r\n    return fechaUTC.toLocaleDateString('es-MX', opciones);\r\n}"]}